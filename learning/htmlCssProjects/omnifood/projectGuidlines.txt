OMNIFOOD
1) -  GOAL OF THE PROJECT - Show what Omnifood does, how it works and in which cities it opperates in. Then, make people sign up on a subscription plan.

2) -  AUDIENCE - Busy people who don't have time to cook, or don't like it.

3) -  ONE PAGE webpage containing information provided by Omnifood, with simple navigation.
- Navigation: Also provided by Omnifood in a text document.

4) -  MAKE SKETCHES for each section of your website

5) -  DEFINE --->>> MAIN-COLOR-(orange) FONT-(Lato)

LECTURE ONE! MAIN POINTS
1) -  New HTML elements: header,nav,ul,li
         - 'header' = NOT the same as the head.  It is usually the first element in the body. 
            Put your header here.

2) -  Put text on an image: make the image darker
         - when setting the background image, use the linear-gradient tag(use two, one top, one bottom) 
         to put a dark color over the picture you want to store the picutre in a 'pictures' folder in the
         css folder in this case. This is shown in the example below where  we put a picture behind the   
         header.

      ex1.) header {
                  background-image: linear-gradient(rgba(0,0,0,0.70), rgba(0,0,0,0.70)), url(img/hero.jpg);
               background-size: cover;
               background-position: center;
               height: 100vh;
            }


3) -  how to make that image as high as the browser viewport
         - frome the above example 'ex1.' the last thre lines accomplish this.
      *** 
      background-size: cover;
      background-position: center;
      height: 100vh;
      ***


4) -  how to make a vertically and horizontally centered box
         - You must use absolute positioning then use "transform: translate(-##, -##);" to position your
         elements where you want them, as shown below.
      
      ex2.) .hero-text-box {
               position: absolute;
               top: 50%;
               left: 50%;
               transform: translate(-75%, -75%);
            }


5) -  how to design buttons
         - First, set the font-family with fallbacks
         - Second, set your display setting to 'inline-block'
         - Lastly, set your button styling.
         - example of a button with no coloration after being clicked(since that makes it look tacky :P).

      ex3.)    .btn:link,
               .btn:visited{
                  font-family: 'latolight', 'Arial', 'sans-serif';
                  display: inline-block;
                  padding: 10px 30px;
                  font-weight: 300;
                  text-decoration: none;
                  border-radius: 200px;
               }


6) -  the 4 link states(psudo-classes) in CSS: link, visited(after clicked), hover, active
         - example of a button with link and visited set to the same settings (see ex3)

7) -  CSS3 transitions for small animations
         -THE FOLLOWING CLASSES add the transitions.  The SECOND one does the initial fade, and the first 
         one does the return fade. (it doesn't need to fade initially since it contains the original 
         styling.)

         - .btn:link,
            .btn:visited {
               display: inline-block;
               padding: 10px 30px;
               font-weight: 300;
               text-decoration: none;
               border-radius: 200px;
               transition: background-color 0.5s, border 0.5s, color 0.5s;
            }

            .btn:hover,
            .btn:active {
               background-color:#b05d14;
               transition: background-color 0.5s, border 0.5s, color 0.5s;
            }


8) -  How to create a simple navigation.
         - 






















